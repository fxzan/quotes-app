{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","quoteID","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","CommentItem","item","CommentsList","comments","map","comment","Comments","useState","isAddingComment","setIsAddingComment","useParams","getAllComments","loadedComments","data","addedCommentHandler","useCallback","length","onClick","HighlightedQuote","quote","author","QuoteDetails","params","match","useRouteMatch","console","log","getSingleQuote","path","exact","to","url"],"mappings":"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","file":"static/js/4.f676fd08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__FJW1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__WyY70\",\"loading\":\"NewCommentForm_loading__2aZPQ\",\"control\":\"NewCommentForm_control__1d5CY\",\"actions\":\"NewCommentForm_actions__3iIQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__1ysNO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1mI2y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2fGqp\"};","import { useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment, quoteID} = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteID: quoteID });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centerd\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment:</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList'\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteID } = params;\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteID)\n  }, [quoteID, sendRequest])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteID);\n  },[sendRequest, quoteID]);\n\n  let comments;\n  if (status === 'pending') {\n    comments = (\n      <div className=\"centerd\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === 'completed' && (loadedComments || loadedComments.length > 0)) {\n    comments =  <CommentsList comments={loadedComments} />\n  }\n\n  if (status === \"completed\" && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No comments yet.</p>\n  }\n    return (\n      <section className={classes.comments}>\n        <h2>User Comments</h2>\n        {!isAddingComment && (\n          <button className=\"btn\" onClick={startAddCommentHandler}>\n            Add a Comment\n          </button>\n        )}\n        {isAddingComment && (\n          <NewCommentForm\n            quoteID={quoteID}\n            onAddedComment={addedCommentHandler}\n          />\n        )}\n        {comments}\n      </section>\n    );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nfunction QuoteDetails() {\r\n  const params = useParams();\r\n  const match = useRouteMatch();\r\n  console.log(match);\r\n\r\n  const { quoteID } = params;\r\n\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: quote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteID);\r\n  }, [sendRequest, quoteID]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if (!quote.text) {\r\n    return <p className=\"centered fallback\">No Quote Found!</p>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={`${match.path}`} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QuoteDetails;\r\n"],"sourceRoot":""}